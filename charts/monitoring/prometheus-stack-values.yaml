prometheus:
  enabled: true
  prometheusSpec:
    disableCompaction: true # thanos 사용을 위해 압축 기능 사용 x
    retention: 1d
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 30Gi
          storageClassName: gp2
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector:
      matchLabels:
        # app: ticketing
        release: prometheus
    serviceMonitorNamespaceSelector: {}
    replicas: 1
    additionalScrapeConfigs:
    - job_name: kube-etcd
      kubernetes_sd_configs:
        - role: node
      scheme: https
      tls_config:
        ca_file:   /etc/prometheus/secrets/etcd-client-cert/etcd-ca
        cert_file: /etc/prometheus/secrets/etcd-client-cert/etcd-client
        key_file:  /etc/prometheus/secrets/etcd-client-cert/etcd-client-key
      relabel_configs:
      - action: labelmap
    thanos:
      image: quay.io/thanos/thanos:v0.28.1
      objectStorageConfig:
        existingSecret:
          name: thanos-objstore-config
          key: thanos.yaml
  thanosService:
    enabled: true
    annotations: {}
    labels: {}
    externalTrafficPolicy: Cluster
    type: ClusterIP
    portName: grpc
    port: 10901
    targetPort: "grpc"
    httpPortName: http
    httpPort: 10902
    targetHttpPort: "http"
    clusterIP: ""
    nodePort: 30901
    httpNodePort: 30902
    
grafana:
  enabled: true
  adminPassword: "admin"
  ingress:
    enabled: true
    ingressClassName: alb
    annotations:
      alb.ingress.kubernetes.io/load-balancer-name: main-alb
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/group.order: '3'
      alb.ingress.kubernetes.io/group.name: ingress-group.main-group
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:206177862976:certificate/89e2b200-d921-4c29-b6e5-5a51f5a4d2be
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}, {"HTTPS":443}]'
      alb.ingress.kubernetes.io/ssl-redirect: '443'
      alb.ingress.kubernetes.io/healthcheck-path: /health
      alb.ingress.kubernetes.io/success-codes: '200'
    hosts:
      - grafana.gmmt.store
    paths:
      - /

  persistence:
    enabled: true
    size: 5Gi
    storageClassName: gp2
  additionalDataSources:
    # - name: Prometheus
    #   type: prometheus
    #   access: proxy
    #   url: http://prometheus-kube-prometheus-prometheus.monitoring.svc.cluster.local:9090
    #   jsonData:
    #     timeInterval: "5s"

    - name: Thanos
      type: prometheus
      access: proxy
      url: http://thanos-query.thanos.svc.cluster.local:9090
      jsonData:
        timeInterval: "5s"

    - name: Loki
      type: loki
      access: proxy
      url: http://loki-gateway.monitoring.svc.cluster.local
      jsonData:
        timeout: 30
    